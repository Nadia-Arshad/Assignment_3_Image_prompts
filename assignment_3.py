# -*- coding: utf-8 -*-
"""Assignment_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RUz1jTsdF-UdsER91NW9PPRwqv2O0Dzh

**How to fetch and plug a key?**

You need to go to **google ai studio** and the click Get an API key from a tab on the upper left side corner. Press **Create API Key** and then click the dialogue box under **Select a project from your existing Google Cloud projects**. Once generated copy your key and come to google colab, press the **key sign** on the left side and then press **Add new Secret** and name your key and in value paste your key, make sure to set the toggle button to checked. Now you can use this key to complete the following process.
"""

# Following lines of code attempt to use Google Colab's Secret Manager and generativeAI API to analyze an image and generate a description.

from google.colab import userdata

# userdata.get tries to retrieve a secret value named "AGENTIC_AI_KEY" stored in google colab secrets.
userdata.get('AGENTIC_AI_KEY')

# Here we're installing the generativeai library
!pip install -U -q google.generativeai

# Here we're importing the library and storing it in alias "genai"
import google.generativeai as genai

# Following code is configuring the genai library with the API key we have.
genai.configure(api_key="AIzaSyBj8eL2It9K8qeefKqygNXHoBtHeyijFyY")

# We stored the model name in the variable
model_name = "gemini-1.5-flash"

# Here we are creating a GenerativeModel object from genai library and plugging in the model_name
model = genai.GenerativeModel(model_name)

# Since we are working with the images, in the following code, we are importing the Image class from PIL (Python Imaging Library) and assigning it to the alias "img"
# img.open helps us to open the uploaded image file in colab, display will show the image.
import PIL.Image as img
image = img.open("pic_cat.jpg")
display(image)

prompt = "explain this image in detail"

# This line attempts to generate text content using the model object with the provided prompt and image.

response = model.generate_content([prompt, image])
print(response.text)

